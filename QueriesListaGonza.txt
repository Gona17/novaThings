---Prisma Movimientos

	---BER/BSC/BSJ:

WITH pris_movimientos_distinct AS (
SELECT DISTINCT bcodest, casadest, cartera, usuario, fevento, fpres, fpago, moneda, codop, evento, evento_grupo, evento_origen, orden, signo_evento, libre, importe_1, importe_2, importe_3, importe_4, libre1, marca_rlimpio, bcodesd_ei, casadest_ei, cartera_ei, fcierre, plancuot, nro_cuot, producto_conc, producto, codop_orig, forig, fpres_orig, fpago_orig, numcomp, codaut, db_automat, term_cartura, atm, numest, numcom, bco_pagador, bcoest, casaest, rubro, codgeo_est, nomcdad, denest, libre2, codpais, monorig, imporig, cinta, tarjeta, libre3, cod_registro, id_archivo FROM de_${entidad}_1raw.pris_movimientos WHERE CAST(usuario AS BIGINT) != 0), cierres AS (SELECT DISTINCT CAST(id_persona AS BIGINT) id_persona, CAST(CONCAT(TRIM(cuenta), TRIM(digito)) AS BIGINT) as cuenta , periodo FROM de_${entidad}_1raw.cierre_mensual_visa_mc WHERE id_persona IS NOT NULL AND id_persona NOT IN ('0', '-99') AND marca = 'VI'), clientes AS (SELECT DISTINCT NVL(nro_cuit, nro_cuil) nro_cuit_cuil, id_cliente_core 
FROM de_${entidad}_2cur.cliente_homologado
) 
SELECT ci.id_persona, cl.Id_Cliente_Core, CAST(pmd.bcodest AS INT) as id_banco_sucursal_movimiento, CAST(pmd.casadest AS INT) as id_casa_emisor, CAST(pmd.cartera AS INT) as id_cartera, CAST(pmd.usuario AS INT) as id_ult_usuario, pmd.fevento as fecha_movimiento, pmd.fpres as fecha_presentaccion_movimiento, pmd.fpago AS fecha_pago_movimiento, pmd.moneda AS id_moneda_transaccion, CAST(pmd.codop AS BIGINT) AS Id_codigo_conciliacion, CAST(pmd.evento AS INT) AS Id_Transaccion, CAST(pmd.evento_grupo AS INT) AS Id_Grupo_Liq, CAST(pmd.evento_origen AS INT) AS id_grupo_evento_orig, CAST(pmd.orden AS INT) AS id_orden_visa, pmd.signo_evento AS credito_debito, pmd.libre AS libre_visa, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_no_facturado, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_2,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_2,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_cruce_fondos, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_3,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_3,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_reservado_visa_3, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_4,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_4,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_reservado_visa_4, pmd.libre1 AS libre_visa_1, pmd.marca_rlimpio AS marca_resumen_limpio, CAST(pmd.bcodesd_ei AS INT) AS id_banco_emisor_ei, CAST(pmd.casadest_ei AS INT) AS id_casa_emisor_ei, CAST(pmd.cartera_ei AS INT) AS id_cartera_ei, pmd.fcierre AS Fecha_Cierre_Usuarios, CAST(pmd.plancuot AS INT) AS Q_Cuotas_Plan, CAST(pmd.nro_cuot AS INT) AS nro_cuota, pmd.producto_conc AS producto_reservado_visa, pmd.producto AS Id_Producto_Cta, CAST(pmd.codop_orig AS INT) AS id_conciliacion_orig, pmd.forig AS Fecha_Origen_Movimiento, pmd.fpres_orig AS Fecha_origen_Presentacion_Movimiento, pmd.fpago_orig AS fecha_origen_pago_movimiento, pmd.numcomp AS Nro_Cupon, pmd.codaut AS Nro_Autorizacion_Movimiento, pmd.db_automat AS Id_Debito_Automatico, pmd.term_cartura AS id_terminal_captura, pmd.atm AS atm, pmd.numest AS Id_Comercio, CAST(pmd.numcom AS BIGINT) AS id_cuenta_comerciante, pmd.bco_pagador AS id_bco_pagador, CAST(pmd.bcoest AS INT) AS id_bco_establecimiento, CAST(pmd.casaest AS INT) AS id_casa_establecimiento, CAST(pmd.rubro AS INT) AS Id_Rubro_Movimiento, pmd.codgeo_est AS Id_Zona_Geo_Origen, pmd.nomcdad AS nombre_cuidad_ext, pmd.denest AS desc_mov, pmd.libre2 AS libre_visa_2, pmd.codpais AS id_pais, pmd.monorig AS Id_Moneda_Original, case when imporig = '0000000000000' then cast(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pmd.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) as decimal(13,2)) else cast(concat(substr(pmd.imporig, 1, 11),'.',substr(pmd.imporig, -2)) as decimal(13,2)) end AS Mto_Orig, pmd.cinta AS nro_cinta_cie, pmd.tarjeta AS Nro_Tarjeta, pmd.libre3 AS libre_visa_3, pmd.cod_registro AS id_registro, pmd.id_archivo AS fuente_registro 
FROM pris_movimientos_distinct pmd 
INNER JOIN cierres ci 
ON CAST(pmd.usuario AS BIGINT) = ci.cuenta 
INNER JOIN clientes cl 
ON ci.id_persona = cl.nro_cuit_cuil WHERE SUBSTR(pmd.forig, 1, 6) = ci.periodo




	----BSF:

WITH pris_movimientos_distinct AS (
SELECT DISTINCT 
bcodest, casadest, cartera, usuario, fevento, fpres, fpago, moneda, codop, evento, evento_grupo, evento_origen, orden, signo_evento, libre, importe_1, importe_2, importe_3, importe_4, libre1, marca_rlimpio, bcodesd_ei, casadest_ei, cartera_ei, fcierre, plancuot, nro_cuot, producto_conc, producto, codop_orig, forig, fpres_orig, fpago_orig, numcomp, codaut, db_automat, term_cartura, atm, numest, numcom, bco_pagador, bcoest, casaest, rubro, codgeo_est, nomcdad, denest, libre2, codpais, monorig, imporig, cinta, tarjeta, libre3, cod_registro, id_archivo FROM de_bsf_1raw.pris_movimientos WHERE CAST(usuario AS BIGINT) != 0), cierres as (select distinct nit, cast(CONCAT(TRIM(cuenta), TRIM(digito)) as bigint) as cuenta, periodo 
from test.cierre_mensual_visa_mc_bsf 
where length(nit) > 0 and nit != '0' AND marca = 'VI'
)
, clientes as (
select distinct 
id_cliente_core, NVL(nro_cuit, nro_cuil) nro_cuit_cuil 
from de_bsf_2cur.cliente_homologado
) 
select DISTINCT 
rc.nro_cuit_cuil as id_persona, rc.Id_Cliente_Core, CAST(pm.bcodest AS INT) as id_banco_sucursal_movimiento, CAST(pm.casadest AS INT) as id_casa_emisor, CAST(pm.cartera AS INT) as id_cartera, CAST(pm.usuario AS INT) as id_ult_usuario, pm.fevento as fecha_movimiento, pm.fpres as fecha_presentaccion_movimiento, pm.fpago AS fecha_pago_movimiento, pm.moneda AS id_moneda_transaccion, CAST(pm.codop AS BIGINT) AS Id_codigo_conciliacion, CAST(pm.evento AS INT) AS Id_Transaccion, CAST(pm.evento_grupo AS INT) AS Id_Grupo_Liq, CAST(pm.evento_origen AS INT) AS id_grupo_evento_orig, CAST(pm.orden AS INT) AS id_orden_visa, pm.signo_evento AS credito_debito, pm.libre AS libre_visa, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_no_facturado, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_2,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_2,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_cruce_fondos, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_3,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_3,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_reservado_visa_3, CAST(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_4,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_4,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) AS DECIMAL(10,2)) AS mto_reservado_visa_4, pm.libre1 AS libre_visa_1, pm.marca_rlimpio AS marca_resumen_limpio, CAST(pm.bcodesd_ei AS INT) AS id_banco_emisor_ei, CAST(pm.casadest_ei AS INT) AS id_casa_emisor_ei, CAST(pm.cartera_ei AS INT) AS id_cartera_ei, pm.fcierre AS Fecha_Cierre_Usuarios, CAST(pm.plancuot AS INT) AS Q_Cuotas_Plan, CAST(pm.nro_cuot AS INT) AS nro_cuota, pm.producto_conc AS producto_reservado_visa, pm.producto AS Id_Producto_Cta, CAST(pm.codop_orig AS INT) AS id_conciliacion_orig, pm.forig AS Fecha_Origen_Movimiento, pm.fpres_orig AS Fecha_origen_Presentacion_Movimiento, pm.fpago_orig AS fecha_origen_pago_movimiento, pm.numcomp AS Nro_Cupon, pm.codaut AS Nro_Autorizacion_Movimiento, pm.db_automat AS Id_Debito_Automatico, pm.term_cartura AS id_terminal_captura, pm.atm AS atm, pm.numest AS Id_Comercio, CAST(pm.numcom AS BIGINT) AS id_cuenta_comerciante, pm.bco_pagador AS id_bco_pagador, CAST(pm.bcoest AS INT) AS id_bco_establecimiento, CAST(pm.casaest AS INT) AS id_casa_establecimiento, CAST(pm.rubro AS INT) AS Id_Rubro_Movimiento, pm.codgeo_est AS Id_Zona_Geo_Origen, pm.nomcdad AS nombre_cuidad_ext, pm.denest AS desc_mov, pm.libre2 AS libre_visa_2, pm.codpais AS id_pais, pm.monorig AS Id_Moneda_Original, case when imporig = '0000000000000' then cast(concat(substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),1, 8), '.', substr(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(pm.importe_1,'{','0'),'}','0'),'A','1'),'B','2'),'C','3'),'D','4'),'E','5'),'F','6'),'G','7'),'H','8'),'I','9'),'J','1'),'K','2'),'L','3'),'M','4'),'N','5'),'O','6'),'P','7'),'Q','8'),'R','9'),-2)) as decimal(13,2)) else cast(concat(substr(pm.imporig, 1, 11),'.',substr(pm.imporig, -2)) as decimal(13,2)) end AS Mto_Orig, pm.cinta AS nro_cinta_cie, pm.tarjeta AS Nro_Tarjeta, pm.libre3 AS libre_visa_3, pm.cod_registro AS id_registro, pm.id_archivo AS fuente_registro 
from pris_movimientos_distinct pm 
inner join cierres ci 
on CAST(pm.usuario AS BIGINT) = ci.cuenta 
inner join clientes rc 
on ci.nit = rc.id_cliente_core 
WHERE SUBSTR(pm.forig, 1, 6) = ci.periodo



---Tarjetas Clientes Credencial:

SELECT
    rc.nro_cuit as id_persona
    ,rc.Id_Cliente_Core
    ,ct.nro_ruc AS nro_cuenta
    ,CAST(ct.nro_bco_sucursal AS INT) AS id_banco_sucursal_cuenta
    ,ct.den_ruc AS denominacion_razon_social
    ,ct.den_calle AS domicilio_cliente
    ,ct.plod AS domicilio_cliente_piso
    ,ct.den_localidad AS domicilio_cliente_localidad
    ,ct.den_barrio AS domicilio_cliente_barrio
    ,ct.nro_telefono AS nro_telefono_cliente
    ,ct.tipo_doc AS tipo_documento_cliente
    ,ct.nro_doc AS nro_documento_cliente
    ,ct.nro_cedula AS nro_cedula_cliente
    ,ct.cod_provincia AS id_provincia_cliente
    ,ct.cod_postal AS cod_postal_cliente
    ,CAST(ct.cod_zona AS INT) AS id_zona_geo_cliente
    ,ct.tipo_cta_1_banco AS tipo_cuenta_bcria_1
    ,ct.nro_cta_1_banco AS nro_cuenta_bcria_1
    ,ct.tipo_cta_2_banco AS tipo_cuenta_bcria_2
    ,ct.nro_cta_2_banco AS nro_cuenta_bcria_2
    ,ct.marca_deb_cta AS marca_debito_cuenta
    ,CAST(ct.grupo AS INT) AS id_grupo_liquidacion
    ,ct.reservado_uso_casa AS filler_credencial_1
    ,CAST(ct.imp_lim_cred AS BIGINT) AS mto_limite_credito
    ,CAST(ct.cod_mtu AS INT) AS Id_Modelo_Tratamiento
    ,CAST(ct.nro_bco_suc_ant AS INT) AS id_banco_sucursal_cuenta_anterior
    ,CAST(ct.estado_operativo AS INT) AS id_estado_operativo
    ,CAST(ct.est_saldo AS INT) AS id_estado_saldo
    ,ct.cod_producto AS id_producto
    ,CAST(ct.cod_afinidad AS INT) AS id_afinidad
    ,CAST(ct.cod_gtos_adm AS INT) AS id_gastos_administrativos
    ,ct.fult_act AS fecha_ult_actualizacion
    ,ct.abm AS id_estado_cuenta
    ,CAST(ct.nro_refer AS INT) AS nro_referencia
    ,CAST(ct.nro_promotor_alta AS INT) AS nro_promotor
    ,ct.cuit AS nro_cuit
    ,CAST(ct.cod_cond_tribut AS INT) AS id_condicion_tributaria
    ,CAST(ct.tipo_modalidad AS INT) AS id_modalidad
    ,CAST(ct.imp_garantia AS DECIMAL(11,2)) AS mto_garantia
    ,CAST(ct.nro_retorno AS INT) AS nro_retorno_agro
    ,ct.marca_renov AS marca_renovacion
    ,CAST(ct.cod_nivel_alerta AS INT) AS id_nivel_alerta
    ,ct.nro_tarjeta AS nro_tarjeta,ct.idtt AS id_titularidad_tarjeta
    ,ct.den_tarjeta_plastico AS nombre_plastico_tarjeta
    ,ct.filler AS filler_credencial_2
    ,ct.den_tarjeta_adicional AS datos_adicionales_plastico
    ,ct.sexo AS id_sexo
    ,ct.marca_hijos AS tiene_hijos
    ,ct.est_civil AS id_estado_civil
    ,ct.fnacimiento AS fecha_nacimiento_cliente
    ,CAST(ct.cod_ocupacion AS INT) AS id_ocupacion
    ,CAST(ct.cod_dur_tarjeta AS INT) AS id_duracion_tarjeta
    ,CAST(ct.cod_categ_tarjeta AS INT) AS id_categoria_tarjeta
    ,ct.fdesde AS fecha_inicio_vigencia
    ,ct.fhasta AS fecha_fin_vigencia
    ,ct.nro_tarjeta_nuevo AS nro_tarjeta_nuevo
    ,ct.marca_grab_tarjeta AS graba_tarjeta
    ,CAST(ct.por_bon_emi_ren AS INT) AS porc_bonificacion_emision_renov
    ,CAST(ct.can_cuota_emi_ren AS INT) AS q_cuotas_emision_renov
    ,CAST(ct.cod_per_bonif AS INT) AS id_periodo_bonificacion
    ,CAST(ct.mot_alta_boletin AS INT) AS id_motivo_alta_boletin
    ,ct.denom_aval AS filler_credencial_3
    ,ct.ususeg AS id_ult_usuario
    ,ct.marca_emis_pin AS emitio_pin
    ,CAST(ct.imp_lim_cpra AS BIGINT) AS mto_limite_compra
    ,CAST(ct.por_lim_adelanto AS FLOAT) AS porc_limite_adelanto
    ,ct.nro_tel_2 AS nro_telefono_cliente_2
    ,CAST(ct.cod_vendedor AS INT) AS id_vendedor
    ,CAST(ct.suc_cta_bco AS INT) AS id_sucursal_cuenta
    ,ct.cbu AS cbu
    ,ct.mail AS mail
    ,ct.nro_doc_extr AS nro_documento_cliente_extranjero
    ,ct.mar_habil AS es_cuenta_habilitada
    ,ct.fbloq AS fecha_bloqueo_cuenta
    ,ct.fdesbloq AS fecha_desbloqueo_cuenta
    ,ct.nro_cel_cpra AS nro_celular_compras 
        FROM de_ber_2cur.cliente_homologado_ext rc, de_ber_1raw.cred_cuentas ct 
        WHERE rc.nro_dni = CAST(ct.nro_doc AS BIGINT) AND ct.tipo_doc = 'DNI' 
UNION SELECT 
    rc.nro_cuit as id_persona
    ,rc.Id_Cliente_Core
    ,ct.nro_ruc AS nro_cuenta
    ,CAST(ct.nro_bco_sucursal AS INT) AS id_banco_sucursal_cuenta
    ,ct.den_ruc AS denominacion_razon_social
    ,ct.den_calle AS domicilio_cliente
    ,ct.plod AS domicilio_cliente_piso
    ,ct.den_localidad AS domicilio_cliente_localidad
    ,ct.den_barrio AS domicilio_cliente_barrio
    ,ct.nro_telefono AS nro_telefono_cliente
    ,ct.tipo_doc AS tipo_documento_cliente
    ,ct.nro_doc AS nro_documento_cliente
    ,ct.nro_cedula AS nro_cedula_cliente
    ,ct.cod_provincia AS id_provincia_cliente
    ,ct.cod_postal AS cod_postal_cliente
    ,CAST(ct.cod_zona AS INT) AS id_zona_geo_cliente
    ,ct.tipo_cta_1_banco AS tipo_cuenta_bcria_1
    ,ct.nro_cta_1_banco AS nro_cuenta_bcria_1
    ,ct.tipo_cta_2_banco AS tipo_cuenta_bcria_2
    ,ct.nro_cta_2_banco AS nro_cuenta_bcria_2
    ,ct.marca_deb_cta AS marca_debito_cuenta
    ,CAST(ct.grupo AS INT) AS id_grupo_liquidacion
    ,ct.reservado_uso_casa AS filler_credencial_1
    ,CAST(ct.imp_lim_cred AS BIGINT) AS mto_limite_credito
    ,CAST(ct.cod_mtu AS INT) AS Id_Modelo_Tratamiento
    ,CAST(ct.nro_bco_suc_ant AS INT) AS id_banco_sucursal_cuenta_anterior
    ,CAST(ct.estado_operativo AS INT) AS id_estado_operativo
    ,CAST(ct.est_saldo AS INT) AS id_estado_saldo
    ,ct.cod_producto AS id_producto
    ,CAST(ct.cod_afinidad AS INT) AS id_afinidad
    ,CAST(ct.cod_gtos_adm AS INT) AS id_gastos_administrativos
    ,ct.fult_act AS fecha_ult_actualizacion
    ,ct.abm AS id_estado_cuenta
    ,CAST(ct.nro_refer AS INT) AS nro_referencia
    ,CAST(ct.nro_promotor_alta AS INT) AS nro_promotor
    ,ct.cuit AS nro_cuit
    ,CAST(ct.cod_cond_tribut AS INT) AS id_condicion_tributaria
    ,CAST(ct.tipo_modalidad AS INT) AS id_modalidad
    ,CAST(ct.imp_garantia AS DECIMAL(11,2)) AS mto_garantia
    ,CAST(ct.nro_retorno AS INT) AS nro_retorno_agro
    ,ct.marca_renov AS marca_renovacion
    ,CAST(ct.cod_nivel_alerta AS INT) AS id_nivel_alerta
    ,ct.nro_tarjeta AS nro_tarjeta,ct.idtt AS id_titularidad_tarjeta
    ,ct.den_tarjeta_plastico AS nombre_plastico_tarjeta
    ,ct.filler AS filler_credencial_2
    ,ct.den_tarjeta_adicional AS datos_adicionales_plastico
    ,ct.sexo AS id_sexo
    ,ct.marca_hijos AS tiene_hijos
    ,ct.est_civil AS id_estado_civil
    ,ct.fnacimiento AS fecha_nacimiento_cliente
    ,CAST(ct.cod_ocupacion AS INT) AS id_ocupacion
    ,CAST(ct.cod_dur_tarjeta AS INT) AS id_duracion_tarjeta
    ,CAST(ct.cod_categ_tarjeta AS INT) AS id_categoria_tarjeta
    ,ct.fdesde AS fecha_inicio_vigencia
    ,ct.fhasta AS fecha_fin_vigencia
    ,ct.nro_tarjeta_nuevo AS nro_tarjeta_nuevo
    ,ct.marca_grab_tarjeta AS graba_tarjeta
    ,CAST(ct.por_bon_emi_ren AS INT) AS porc_bonificacion_emision_renov
    ,CAST(ct.can_cuota_emi_ren AS INT) AS q_cuotas_emision_renov
    ,CAST(ct.cod_per_bonif AS INT) AS id_periodo_bonificacion
    ,CAST(ct.mot_alta_boletin AS INT) AS id_motivo_alta_boletin
    ,ct.denom_aval AS filler_credencial_3
    ,ct.ususeg AS id_ult_usuario
    ,ct.marca_emis_pin AS emitio_pin
    ,CAST(ct.imp_lim_cpra AS BIGINT) AS mto_limite_compra
    ,CAST(ct.por_lim_adelanto AS FLOAT) AS porc_limite_adelanto
    ,ct.nro_tel_2 AS nro_telefono_cliente_2
    ,CAST(ct.cod_vendedor AS INT) AS id_vendedor
    ,CAST(ct.suc_cta_bco AS INT) AS id_sucursal_cuenta
    ,ct.cbu AS cbu
    ,ct.mail AS mail
    ,ct.nro_doc_extr AS nro_documento_cliente_extranjero
    ,ct.mar_habil AS es_cuenta_habilitada
    ,ct.fbloq AS fecha_bloqueo_cuenta
    ,ct.fdesbloq AS fecha_desbloqueo_cuenta
    ,ct.nro_cel_cpra AS nro_celular_compras
        FROM de_ber_2cur.cliente_homologado_ext rc, de_ber_1raw.cred_cuentas ct 
        WHERE rc.nro_lc = CAST(ct.nro_doc AS BIGINT) AND ct.tipo_doc = 'LC'


--Credencial Movimientos

	--BER/BSC/BSJ:

WITH cred_movimientos_distinct AS (
SELECT DISTINCT 
tip_reg, nro_lote, reservado_uso_casa, nro_boleta, cod_transac, nro_bco_suc_mov, reservado_uso_casa1, nro_cupon, cod_mon, imp_cotiz, imp_tot_vta, imp_tot_orig, imp_sdes, imp_tot, forigen, fepres, feproc, fclear, fliqcom, fliqusu, fpago, fvenc, nro_com, plazo, por_descto, cod_rubro, por_alicuota_iva_com, cod_producto_com, imp_fijo_asoc_vta, nro_bco_suc_ruc, nro_ruc, nro_tar, grupo, imp_iva_usu, cod_producto_cta, nro_aut, mon_orig, fpago_mc, cod_tasint_mc, cod_financ, filler, cod_zogeo_orig, cod_zogeo_dest, cod_debaut, tip_vta, mont_contrap, forigen_posnet, cuota, mar_financiable, mar_exc_lim_cpra, mar_ret_iva, mar_cuo_anti, reservado_uso_casa2, por_tas_int_pag_ade, imp_int_pag_ade, por_tas_int_emi_ade, por_ara_ade, por_tas_sel_ade, den_mov, den_mov_adi, est_proc, reservado_uso_casa3, can_cuotas_plan, reservado_uso_casa4, tasa_intercam, ref_univ_de31, com_mc, de22, filler1 
FROM de_${entidad}_1raw.cred_movimientos 
WHERE CAST(nro_ruc AS BIGINT) != 0
)
, cierres as (
SELECT DISTINCT CAST(id_persona AS BIGINT) id_persona, CAST(CONCAT(TRIM(cuenta), TRIM(digito)) AS BIGINT) as cuenta , periodo 
FROM de_${entidad}_1raw.cierre_mensual_visa_mc 
WHERE id_persona IS NOT NULL 
AND id_persona NOT IN ('0', '-99') AND marca = 'CR'
)
, clientes as (select distinct id_cliente_core, NVL(nro_cuit, nro_cuil) nro_cuit_cuil 
from de_${entidad}_2cur.cliente_homologado
) 
SELECT DISTINCT 

rc.nro_cuit_cuil as id_persona, CAST(rc.Id_Cliente_Core AS BIGINT) as id_cliente_core, CAST(cm.nro_lote AS STRING) as nro_lote, CAST(cm.nro_boleta AS BIGINT) as nro_boleta, CAST(cm.cod_transac AS INT) as id_transaccion, CAST(cm.nro_bco_suc_mov AS INT) as id_banco_sucursal_mov, CAST(cm.reservado_uso_casa1 AS INT) as filler_credencial_1, CAST(cm.nro_cupon AS INT) as nro_cupon, CAST(cm.cod_mon AS INT) as id_moneda, CAST(concat(substr(cm.imp_cotiz,1,5),'.',substr(cm.imp_cotiz,-4)) AS DECIMAL(9,4)) as valor_cotiz_conversion, CAST(concat(substr(concat(substr(cm.imp_tot_vta, 1, 12), CASE substr(cm.imp_tot_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_vta, -1)END),1,11),'.',substr(concat(substr(cm.imp_tot_vta, 1, 12), CASE substr(cm.imp_tot_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_vta, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total_en_cuotas,CAST(concat(substr(concat(substr(cm.imp_tot_orig, 1, 12),CASE substr(cm.imp_tot_orig, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_orig, -1)END),1,11),'.',substr(concat(substr(cm.imp_tot_orig, 1, 12), CASE substr(cm.imp_tot_orig, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_orig, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total,CAST(concat(substr(concat(substr(cm.imp_sdes, 1, 12),CASE substr(cm.imp_sdes, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_sdes, -1)END),1,11),'.',substr(concat(substr(cm.imp_sdes, 1, 12),CASE substr(cm.imp_sdes, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_sdes, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total_sin_descuento, CAST(concat(substr(concat(substr(cm.imp_tot, 1, 12), CASE substr(cm.imp_tot, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot, -1)END), 1, 11),'.',substr(concat(substr(cm.imp_tot, 1, 12), CASE substr(cm.imp_tot, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total_2, cm.forigen as fecha_origen_mov, cm.fepres as fecha_presentaccion_mov, cm.feproc as fecha_proceso_mov, cm.fclear as fecha_clearing_mov, cm.fliqcom as fecha_liq_mov_comercios, cm.fliqusu as fecha_liq_socios, cm.fpago as fecha_pago_mov, cm.fvenc as fecha_vto_mov, CAST(cm.nro_com AS STRING) as id_comercio, CAST(cm.plazo AS INT) as plazo_pago, CAST(concat(substr(cm.por_descto,1,2),'.',substr(cm.por_descto,-2)) AS DECIMAL(4,2)) as porc_retencion_comercio, CAST(cm.cod_rubro AS INT) as id_rubro_mov, CAST(concat( substr( concat(substr(por_alicuota_iva_com, 1, 4), CASE substr(por_alicuota_iva_com, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(por_alicuota_iva_com, -1) END),1,3),'.',substr(concat(substr(por_alicuota_iva_com, 1, 4), CASE substr(por_alicuota_iva_com, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(por_alicuota_iva_com, -1) END ),-2) ) AS DECIMAL(5, 2) ) as porc_iva, CAST(cm.cod_producto_com AS INT) as id_producto_vta_comercio, CAST(concat(substr( concat( substr(cm.imp_fijo_asoc_vta, 1, 12), CASE substr(cm.imp_fijo_asoc_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_fijo_asoc_vta, -1) END),1,11),'.',substr(concat(substr(cm.imp_fijo_asoc_vta, 1, 12), CASE substr(cm.imp_fijo_asoc_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_fijo_asoc_vta, -1) END),-2)) AS DECIMAL(13, 2)) as mto_prestamo,CAST(cm.nro_bco_suc_ruc AS STRING) as id_banco_sucursal_cliente,CAST(cm.nro_ruc AS STRING) as nro_cuenta,CAST(cm.nro_tar AS STRING) as nro_tarjeta,CAST(cm.grupo AS INT) as id_grupo_liq,CAST(concat(substr(cm.imp_iva_usu,1,11),'.',substr(cm.imp_iva_usu,-2)) AS DECIMAL(13,2)) as mto_retencion_iva,CAST(cm.cod_producto_cta AS STRING) as id_producto_cta,CAST(cm.nro_aut AS BIGINT) as nro_autorizacion_mov,cm.mon_orig as id_moneda_original,cm.fpago_mc as fecha_pago_credencial,CAST(cm.cod_tasint_mc AS INT) as id_tasa_int_credencial,CAST(cm.cod_financ AS INT) as id_financiacion,CAST(cm.filler AS STRING) as filler_credencial_2,CAST(cm.cod_zogeo_orig AS STRING) as id_zona_geo_origen,CAST(cm.cod_zogeo_dest AS STRING) as id_zona_geo_destino,CAST(cm.cod_debaut AS INT) as id_debito_automatico,CAST(cm.tip_vta AS STRING) as tipo_venta,CAST(cm.mont_contrap AS INT) as id_mot_contrapartida, cm.forigen_posnet as fecha_origen_mov_posnet, CAST(cm.cuota AS INT) as nro_cuota, CAST(cm.mar_financiable AS STRING) as marca_mov_financiero, CAST(cm.mar_exc_lim_cpra AS STRING) as marca_mov_lim_compra, CAST(cm.mar_ret_iva AS STRING) as marca_retencion_iva, CAST(cm.mar_cuo_anti AS STRING) as marca_mov_cuota_ant, CAST(concat(substr(cm.por_tas_int_pag_ade,1,3),'.',substr(cm.por_tas_int_pag_ade,-3)) AS DECIMAL(6,3)) as porc_tasa_int_pagadora, CAST(concat(substr(cm.imp_int_pag_ade,1,11),'.',substr(cm.imp_int_pag_ade,-2)) AS DECIMAL(13,2)) as mto_interes_adelantado, CAST(concat(substr(cm.por_tas_int_emi_ade,1,3),'.',substr(cm.por_tas_int_emi_ade,-3)) AS DECIMAL(6,3)) as porc_tasa_int_adelantado, CAST(concat(substr(cm.por_ara_ade,1,3),'.',substr(cm.por_ara_ade,-3)) AS DECIMAL(6,3)) as mto_adelanto, CAST(concat(substr(cm.por_tas_sel_ade,1,3),'.',substr(cm.por_tas_sel_ade,-3)) AS DECIMAL(6,3)) as porc_tasa_sellado_adelanto, CAST(cm.den_mov AS STRING) as desc_mov, CAST(cm.den_mov_adi AS STRING) as desc_adicional_mov, CAST(cm.est_proc AS STRING) as id_estado_proceso, CAST(cm.reservado_uso_casa3 AS STRING) as filler_credencial_3, CAST(cm.can_cuotas_plan AS INT) as q_cuotas_plan, CAST(cm.reservado_uso_casa4 AS STRING) as filler_credencial_4, CAST(concat(substr(cm.tasa_intercam,1,11),'.',substr(cm.tasa_intercam,-2)) AS DECIMAL(13,2)) mto_tasa_intercambio, CAST(cm.ref_univ_de31 AS STRING) as id_referencia_mc, CAST(cm.com_mc AS STRING) as id_comercio_mc, CAST(cm.de22 AS STRING) as id_modo_ingreso_mc, CAST(cm.filler1 AS STRING) as filler_3, CAST(cm.tip_reg AS STRING) as fuente_registro 

from cred_movimientos_distinct cm 
inner join cierres ci 
on CAST(cm.nro_ruc AS BIGINT) = ci.cuenta 
inner join clientes rc 
on ci.id_persona = rc.nro_cuit_cuil WHERE SUBSTR(cm.forigen, 1, 6) = ci.periodo



	---BSF:

WITH cred_movimientos_distinct AS (
SELECT DISTINCT 
tip_reg, nro_lote, reservado_uso_casa, nro_boleta, cod_transac, nro_bco_suc_mov, reservado_uso_casa1, nro_cupon, cod_mon, imp_cotiz, imp_tot_vta, imp_tot_orig, imp_sdes, imp_tot, forigen, fepres, feproc, fclear, fliqcom, fliqusu, fpago, fvenc, nro_com, plazo, por_descto, cod_rubro, por_alicuota_iva_com, cod_producto_com, imp_fijo_asoc_vta, nro_bco_suc_ruc, nro_ruc, nro_tar, grupo, imp_iva_usu, cod_producto_cta, nro_aut, mon_orig, fpago_mc, cod_tasint_mc, cod_financ, filler, cod_zogeo_orig, cod_zogeo_dest, cod_debaut, tip_vta, mont_contrap, forigen_posnet, cuota, mar_financiable, mar_exc_lim_cpra, mar_ret_iva, mar_cuo_anti, reservado_uso_casa2, por_tas_int_pag_ade, imp_int_pag_ade, por_tas_int_emi_ade, por_ara_ade, por_tas_sel_ade, den_mov, den_mov_adi, est_proc, reservado_uso_casa3, can_cuotas_plan, reservado_uso_casa4, tasa_intercam, ref_univ_de31, com_mc, de22, filler1 
FROM de_bsf_1raw.cred_movimientos 
WHERE CAST(nro_ruc AS BIGINT) != 0
)
, cierres as (
select distinct 
nit, cast(CONCAT(TRIM(cuenta), TRIM(digito)) as bigint) as cuenta, periodo 
from test.cierre_mensual_visa_mc_bsf where length(nit) > 0 and nit != '0' AND marca = 'CR'
)
, clientes as (
select distinct id_cliente_core, NVL(nro_cuit, nro_cuil) nro_cuit_cuil 
from de_bsf_2cur.cliente_homologado
) 
SELECT DISTINCT 
rc.nro_cuit_cuil as id_persona, CAST(rc.Id_Cliente_Core AS BIGINT) as id_cliente_core, CAST(cm.nro_lote AS STRING) as nro_lote, CAST(cm.nro_boleta AS BIGINT) as nro_boleta, CAST(cm.cod_transac AS INT) as id_transaccion, CAST(cm.nro_bco_suc_mov AS INT) as id_banco_sucursal_mov, CAST(cm.reservado_uso_casa1 AS INT) as filler_credencial_1, CAST(cm.nro_cupon AS INT) as nro_cupon, CAST(cm.cod_mon AS INT) as id_moneda, CAST(concat(substr(cm.imp_cotiz,1,5),'.',substr(cm.imp_cotiz,-4)) AS DECIMAL(9,4)) as valor_cotiz_conversion, CAST(concat(substr(concat(substr(cm.imp_tot_vta, 1, 12), CASE substr(cm.imp_tot_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_vta, -1)END),1,11),'.',substr(concat(substr(cm.imp_tot_vta, 1, 12), CASE substr(cm.imp_tot_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_vta, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total_en_cuotas,CAST(concat(substr(concat(substr(cm.imp_tot_orig, 1, 12),CASE substr(cm.imp_tot_orig, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_orig, -1)END),1,11),'.',substr(concat(substr(cm.imp_tot_orig, 1, 12), CASE substr(cm.imp_tot_orig, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot_orig, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total,CAST(concat(substr(concat(substr(cm.imp_sdes, 1, 12),CASE substr(cm.imp_sdes, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_sdes, -1)END),1,11),'.',substr(concat(substr(cm.imp_sdes, 1, 12),CASE substr(cm.imp_sdes, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_sdes, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total_sin_descuento, CAST(concat(substr(concat(substr(cm.imp_tot, 1, 12), CASE substr(cm.imp_tot, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot, -1)END), 1, 11),'.',substr(concat(substr(cm.imp_tot, 1, 12), CASE substr(cm.imp_tot, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_tot, -1)END),-2)) AS DECIMAL(13, 2)) as mto_total_2, cm.forigen as fecha_origen_mov, cm.fepres as fecha_presentaccion_mov, cm.feproc as fecha_proceso_mov, cm.fclear as fecha_clearing_mov, cm.fliqcom as fecha_liq_mov_comercios, cm.fliqusu as fecha_liq_socios, cm.fpago as fecha_pago_mov, cm.fvenc as fecha_vto_mov, CAST(cm.nro_com AS STRING) as id_comercio, CAST(cm.plazo AS INT) as plazo_pago, CAST(concat(substr(cm.por_descto,1,2),'.',substr(cm.por_descto,-2)) AS DECIMAL(4,2)) as porc_retencion_comercio, CAST(cm.cod_rubro AS INT) as id_rubro_mov, CAST(concat( substr( concat(substr(por_alicuota_iva_com, 1, 4), CASE substr(por_alicuota_iva_com, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(por_alicuota_iva_com, -1) END),1,3),'.',substr(concat(substr(por_alicuota_iva_com, 1, 4), CASE substr(por_alicuota_iva_com, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(por_alicuota_iva_com, -1) END ),-2) ) AS DECIMAL(5, 2) ) as porc_iva, CAST(cm.cod_producto_com AS INT) as id_producto_vta_comercio, CAST(concat(substr( concat( substr(cm.imp_fijo_asoc_vta, 1, 12), CASE substr(cm.imp_fijo_asoc_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_fijo_asoc_vta, -1) END),1,11),'.',substr(concat(substr(cm.imp_fijo_asoc_vta, 1, 12), CASE substr(cm.imp_fijo_asoc_vta, -1) WHEN 'p' THEN '0' WHEN 'q' THEN '1' WHEN 'r' THEN '2' WHEN 's' THEN '3' WHEN 't' THEN '4' WHEN 'u' THEN '5' WHEN 'v' THEN '6' WHEN 'w' THEN '7' WHEN 'x' THEN '8' WHEN 'y' THEN '9' ELSE substr(cm.imp_fijo_asoc_vta, -1) END),-2)) AS DECIMAL(13, 2)) as mto_prestamo,CAST(cm.nro_bco_suc_ruc AS STRING) as id_banco_sucursal_cliente,CAST(cm.nro_ruc AS STRING) as nro_cuenta,CAST(cm.nro_tar AS STRING) as nro_tarjeta,CAST(cm.grupo AS INT) as id_grupo_liq,CAST(concat(substr(cm.imp_iva_usu,1,11),'.',substr(cm.imp_iva_usu,-2)) AS DECIMAL(13,2)) as mto_retencion_iva,CAST(cm.cod_producto_cta AS STRING) as id_producto_cta,CAST(cm.nro_aut AS BIGINT) as nro_autorizacion_mov,cm.mon_orig as id_moneda_original,cm.fpago_mc as fecha_pago_credencial,CAST(cm.cod_tasint_mc AS INT) as id_tasa_int_credencial,CAST(cm.cod_financ AS INT) as id_financiacion,CAST(cm.filler AS STRING) as filler_credencial_2,CAST(cm.cod_zogeo_orig AS STRING) as id_zona_geo_origen,CAST(cm.cod_zogeo_dest AS STRING) as id_zona_geo_destino,CAST(cm.cod_debaut AS INT) as id_debito_automatico,CAST(cm.tip_vta AS STRING) as tipo_venta,CAST(cm.mont_contrap AS INT) as id_mot_contrapartida, cm.forigen_posnet as fecha_origen_mov_posnet, CAST(cm.cuota AS INT) as nro_cuota, CAST(cm.mar_financiable AS STRING) as marca_mov_financiero, CAST(cm.mar_exc_lim_cpra AS STRING) as marca_mov_lim_compra, CAST(cm.mar_ret_iva AS STRING) as marca_retencion_iva, CAST(cm.mar_cuo_anti AS STRING) as marca_mov_cuota_ant, CAST(concat(substr(cm.por_tas_int_pag_ade,1,3),'.',substr(cm.por_tas_int_pag_ade,-3)) AS DECIMAL(6,3)) as porc_tasa_int_pagadora, CAST(concat(substr(cm.imp_int_pag_ade,1,11),'.',substr(cm.imp_int_pag_ade,-2)) AS DECIMAL(13,2)) as mto_interes_adelantado, CAST(concat(substr(cm.por_tas_int_emi_ade,1,3),'.',substr(cm.por_tas_int_emi_ade,-3)) AS DECIMAL(6,3)) as porc_tasa_int_adelantado, CAST(concat(substr(cm.por_ara_ade,1,3),'.',substr(cm.por_ara_ade,-3)) AS DECIMAL(6,3)) as mto_adelanto, CAST(concat(substr(cm.por_tas_sel_ade,1,3),'.',substr(cm.por_tas_sel_ade,-3)) AS DECIMAL(6,3)) as porc_tasa_sellado_adelanto, CAST(cm.den_mov AS STRING) as desc_mov, CAST(cm.den_mov_adi AS STRING) as desc_adicional_mov, CAST(cm.est_proc AS STRING) as id_estado_proceso, CAST(cm.reservado_uso_casa3 AS STRING) as filler_credencial_3, CAST(cm.can_cuotas_plan AS INT) as q_cuotas_plan, CAST(cm.reservado_uso_casa4 AS STRING) as filler_credencial_4, CAST(concat(substr(cm.tasa_intercam,1,11),'.',substr(cm.tasa_intercam,-2)) AS DECIMAL(13,2)) mto_tasa_intercambio, CAST(cm.ref_univ_de31 AS STRING) as id_referencia_mc, CAST(cm.com_mc AS STRING) as id_comercio_mc, CAST(cm.de22 AS STRING) as id_modo_ingreso_mc, CAST(cm.filler1 AS STRING) as filler_3, CAST(cm.tip_reg AS STRING) as fuente_registro 
from cred_movimientos_distinct cm 
inner join cierres ci 
on CAST(cm.nro_ruc AS BIGINT) = ci.cuenta 
inner join clientes rc 
on ci.nit = rc.id_cliente_core WHERE SUBSTR(cm.forigen, 1, 6) = ci.periodo




---Consumos

	---BER/BSC/BSJ:

WITH clientes AS 
(
    SELECT DISTINCT 
        id_cliente_core 
    FROM de_ber_2cur.rel_cliente_core_documentos
)
, rank_table_cred AS 
(
    SELECT DISTINCT 
        mto_total mt
        , ROUND(PERCENT_RANK() OVER (ORDER BY ROUND(NVL(mto_total,0),1)) * 100,0) AS rank 
    FROM de_ber_2cur.ft_ttcc_movimientos_credencial 
    WHERE nro_cuota < 2 AND NVL(id_rubro_mov,0) != 0
)
, rank_table_pris AS 
(
    SELECT DISTINCT 
        mto_orig mt
        , ROUND(PERCENT_RANK() OVER (ORDER BY ROUND(NVL(mto_orig,0),1)) * 100,0) AS rank 
    FROM de_ber_2cur.ft_ttcc_movimientos_prisma 
    WHERE nro_cuota < 2 AND NVL(id_rubro_movimiento,0) != 0
) 
    SELECT 
        rc.Id_Cliente_Core
        , ft.Id_Transaccion
        , ft.fecha_origen_mov AS fecha_transaccion
        , ft.mto_total AS mto_transaccion
        , CAST(ft.id_moneda AS STRING)
        , 'MC' AS id_tarjetera
        , ft.id_rubro_mov AS id_rubro
        , CAST(pb.id_param AS INT) AS id_categoria  
          FROM clientes rc  
    INNER JOIN de_ber_2cur.ft_ttcc_movimientos_credencial ft 
          ON rc.id_cliente_core = CAST(ft.id_cliente_core AS BIGINT)  
    INNER JOIN de_gpn_1raw.param_bco_tarjetas_rubro_relacion pb 
          ON ft.id_rubro_mov = CAST(pb.codigo_origen AS INT)  
          WHERE ft.nro_cuota < 2 AND NVL(ft.id_rubro_mov,0) != 0  AND ft.mto_total 
            BETWEEN (
                SELECT MAX(a.mt) 
                FROM rank_table_cred a 
                WHERE a.rank = 10
            ) 
            AND (
                SELECT MIN(a.mt) FROM rank_table_cred a WHERE a.rank = 90
            ) 
UNION ALL  
    SELECT 
        rc.Id_Cliente_Core
        , ft.Id_Transaccion
        , ft.fecha_origen_movimiento
        , ft.mto_orig
        , ft.id_moneda_transaccion
        , 'VI' AS id_tarjetera
        , ft.id_rubro_movimiento
        , CAST(pb.id_param AS INT) 
            FROM clientes rc 
      INNER JOIN de_ber_2cur.ft_ttcc_movimientos_prisma ft 
            ON rc.id_cliente_core = CAST(ft.id_cliente_core AS BIGINT) 
      INNER JOIN de_gpn_1raw.param_bco_tarjetas_rubro_relacion pb 
            ON ft.id_rubro_movimiento = CAST(pb.codigo_origen AS INT) 
            WHERE ft.nro_cuota < 2 AND NVL(ft.id_rubro_movimiento,0) != 0 AND ft.mto_orig 
                BETWEEN (
                    SELECT MAX(a.mt) 
                    FROM rank_table_pris a 
                    WHERE a.rank = 10
                ) 
                AND (
                    SELECT MIN(a.mt) FROM rank_table_pris a WHERE a.rank = 90
                )


	---BSF:


WITH clientes AS 
(
    SELECT DISTINCT 
        id_cliente_core 
    FROM de_bsf_2cur.cliente_homologado_ext
)
,rank_table_cred AS 
(
    SELECT DISTINCT 
        mto_total mt
        , ROUND(PERCENT_RANK() OVER (ORDER BY ROUND(NVL(mto_total,0),1)) * 100,0) AS rank 
    FROM de_bsf_2cur.ft_ttcc_movimientos_credencial 
    WHERE nro_cuota < 2 AND NVL(id_rubro_mov,0) != 0
)
, rank_table_pris AS 
(
    SELECT DISTINCT 
        mto_orig mt
        , ROUND(PERCENT_RANK() OVER (ORDER BY ROUND(NVL(mto_orig,0),1)) * 100,0) AS rank 
    FROM de_bsf_2cur.ft_ttcc_movimientos_prisma 
    WHERE nro_cuota < 2 AND NVL(id_rubro_movimiento,0) != 0
) 
    SELECT 
        rc.Id_Cliente_Core
        , ft.Id_Transaccion
        , ft.fecha_origen_mov AS fecha_transaccion
        , ft.mto_total AS mto_transaccion
        , CAST(ft.id_moneda AS STRING)
        , 'MC' AS id_tarjetera
        , ft.id_rubro_mov AS id_rubro
        , CAST(pb.id_param AS INT) AS id_categoria  
          FROM clientes rc  
    INNER JOIN de_bsf_2cur.ft_ttcc_movimientos_credencial ft 
          ON rc.id_cliente_core = CAST(ft.id_cliente_core AS BIGINT)  
    INNER JOIN de_gpn_1raw.param_bco_tarjetas_rubro_relacion pb 
          ON ft.id_rubro_mov = CAST(pb.codigo_origen AS INT)  
          WHERE ft.nro_cuota < 2 AND NVL(ft.id_rubro_mov,0) != 0  AND ft.mto_total 
            BETWEEN (
                SELECT MAX(a.mt) 
                FROM rank_table_cred a 
                WHERE a.rank = 10
            ) 
            AND (
                SELECT MIN(a.mt) FROM rank_table_cred a WHERE a.rank = 90
            ) 
UNION ALL  
    SELECT 
        rc.Id_Cliente_Core
        , ft.Id_Transaccion
        , ft.fecha_origen_movimiento
        , ft.mto_orig
        , ft.id_moneda_transaccion
        , 'VI' AS id_tarjetera
        , ft.id_rubro_movimiento
        , CAST(pb.id_param AS INT) 
            FROM clientes rc 
      INNER JOIN de_bsf_2cur.ft_ttcc_movimientos_prisma ft 
            ON rc.id_cliente_core = CAST(ft.id_cliente_core AS BIGINT) 
      INNER JOIN de_gpn_1raw.param_bco_tarjetas_rubro_relacion pb 
            ON ft.id_rubro_movimiento = CAST(pb.codigo_origen AS INT) 
            WHERE ft.nro_cuota < 2 AND NVL(ft.id_rubro_movimiento,0) != 0 AND ft.mto_orig 
                BETWEEN (
                    SELECT MAX(a.mt) 
                    FROM rank_table_pris a 
                    WHERE a.rank = 10
                ) 
                AND (
                    SELECT MIN(a.mt) FROM rank_table_pris a WHERE a.rank = 90
                )



---Dim_empleados

	---BER:

SELECT DISTINCT 
        CAST(replace(me.cuil_empleado,'-','') AS BIGINT) as id_persona
        ,rc.id_cliente_core  as id_cliente_core
        ,CAST(me.dni_empleado AS BIGINT) as nro_documento
        ,CAST(me.codigo_empleado AS BIGINT) AS codigo_empleado
        ,CAST(me.cod_estado_empleado AS INT) AS cod_estado_empleado
        ,me.desc_estado_empleado
        ,me.cod_sector_empleado
        ,me.desc_sector_empleado
        ,me.fecha_ingreso_emp
        ,me.fecha_baja_emp
        ,CAST(me.numero_filial AS INT) AS numero_filial
        ,me.banco_filial
        ,CAST(me.cod_puesto_empleado AS BIGINT) AS cod_puesto_empleado
        ,me.desc_puesto_empleado
        ,me.usuario_empleado
    FROM de_ber_1raw.meta4_empleados me
    INNER JOIN de_ber_2cur.rel_cliente_core_documentos rc
    ON rc.id_persona = CAST(replace(me.cuil_empleado,'-','') AS BIGINT)
    WHERE rc.id_tipo_doc = 35 AND me.fecha_baja_emp IS NULL AND me.banco_filial = 'BER';


	---BSJ:

SELECT DISTINCT 
        CAST(replace(me.cuil_empleado,'-','') AS BIGINT) as id_persona
        ,rc.id_cliente_core  as id_cliente_core
        ,CAST(me.dni_empleado AS BIGINT) as nro_documento
        ,CAST(me.codigo_empleado AS BIGINT) AS codigo_empleado
        ,CAST(me.cod_estado_empleado AS INT) AS cod_estado_empleado
        ,me.desc_estado_empleado
        ,me.cod_sector_empleado
        ,me.desc_sector_empleado
        ,me.fecha_ingreso_emp
        ,me.fecha_baja_emp
        ,CAST(me.numero_filial AS INT) AS numero_filial
        ,me.banco_filial
        ,CAST(me.cod_puesto_empleado AS BIGINT) AS cod_puesto_empleado
        ,me.desc_puesto_empleado
        ,me.usuario_empleado
    FROM de_bsj_1raw.meta4_empleados me
    INNER JOIN de_bsj_2cur.rel_cliente_core_documentos rc
    ON rc.id_persona = CAST(replace(me.cuil_empleado,'-','') AS BIGINT)
    WHERE rc.id_tipo_doc = 34 AND me.fecha_baja_emp IS NULL AND me.banco_filial = 'BSJ';

	---BSC:

SELECT DISTINCT 
        CAST(replace(me.cuil_empleado,'-','') AS BIGINT) as id_persona
        ,rc.id_cliente_core  as id_cliente_core
        ,CAST(me.dni_empleado AS BIGINT) as nro_documento
        ,CAST(me.codigo_empleado AS BIGINT) AS codigo_empleado
        ,CAST(me.cod_estado_empleado AS INT) AS cod_estado_empleado
        ,me.desc_estado_empleado
        ,me.cod_sector_empleado
        ,me.desc_sector_empleado
        ,me.fecha_ingreso_emp
        ,me.fecha_baja_emp
        ,CAST(me.numero_filial AS INT) AS numero_filial
        ,me.banco_filial
        ,CAST(me.cod_puesto_empleado AS BIGINT) AS cod_puesto_empleado
        ,me.desc_puesto_empleado
        ,me.usuario_empleado
    FROM de_bsc_1raw.meta4_empleados me
    INNER JOIN de_bsc_2cur.rel_cliente_core_documentos rc
    ON rc.id_persona = CAST(replace(me.cuil_empleado,'-','') AS BIGINT)
    WHERE rc.id_tipo_doc = 35 AND me.fecha_baja_emp IS NULL AND me.banco_filial = 'BSC';

	---BSF:

with clientes as 
(
    select distinct 
        id_cliente_core
        ,nro_cuit
    from de_bsf_2cur.cliente_homologado_ext
) 
    SELECT distinct
        CAST(replace(me.cuil_empleado,'-','') AS BIGINT) as id_persona
        ,CAST(clientes.id_cliente_core AS BIGINT) as id_cliente_core
        ,CAST(me.dni_empleado AS BIGINT) as nro_documento
        ,CAST(me.codigo_empleado AS BIGINT) AS codigo_empleado
        ,CAST(me.cod_estado_empleado AS INT) AS cod_estado_empleado
        ,me.desc_estado_empleado
        ,me.cod_sector_empleado
        ,me.desc_sector_empleado
        ,me.fecha_ingreso_emp
        ,me.fecha_baja_emp
        ,CAST(me.numero_filial AS INT) AS numero_filial
        ,me.banco_filial
        ,CAST(me.cod_puesto_empleado AS BIGINT) AS cod_puesto_empleado
        ,me.desc_puesto_empleado
        ,me.usuario_empleado
    FROM de_bsf_1raw.meta4_empleados me
    INNER JOIN clientes
    ON clientes.nro_cuit = CAST(replace(me.cuil_empleado,'-','') AS BIGINT)
    WHERE me.fecha_baja_emp IS NULL AND me.banco_filial = 'BSF';





-- Curado stocks

select distinct 
	cast(cs.id_cliente as bigint) as id_cliente
	, cast(sha(cs.id_cliente) as string) as id_cliente_qualia
	, CAST(cs.cuit_l AS BIGINT) AS nro_cuit
	, CAST(substr(trim(cs.cuit_l),3,8) AS BIGINT) as nro_dni
	, CAST(cs.num_pol AS bigint) AS nro_poliza
	, cs.cod_ramo
	, cs.ramo
	, cs.cod_producto
	, cs.producto
	, CAST(cs.poliza_renov AS bigint) AS nro_poliza_renovada
	, cs.vig_desde as fecha_vig_desde, cs.vig_hasta as fecha_vig_hasta
	, cs.fecha_alta, cs.fecha_baja
	, cs.fecha_emision_poliza
	, cs.fecha_ult_mod as fecha_ult_modificacion
	, cs.forma_pago
	, '' as mail
	, '' as tipo_telefono_1
	, '' as telefono_1
	, '' as tipo_telefono_2
	, '' as telefono_2
	, cs.entidad from de_qua_1raw.cliente_seguros cs  
where (cs.entidad = 'bsf' and cs.fecha_proceso = ${fechabsf})   
	or (cs.entidad = 'ber' and cs.fecha_proceso = ${fechaber})  
 	or (cs.entidad = 'bsj' and cs.fecha_proceso = ${fechabsj})   
	or (cs.entidad = 'bsc' and cs.fecha_proceso = ${fechabsc}) 
union  
select distinct cast(csd.id_cliente as bigint) as id_cliente
		, cast(sha(csd.id_cliente) as string) as id_cliente_qualia
	, CAST(csd.cuit_l AS BIGINT) AS nro_cuit
	, CAST(substr(trim(csd.cuit_l),3,8) AS BIGINT) as nro_dni
	, CAST(csd.num_pol AS bigint) AS nro_poliza
	, csd.cod_ramo
	, csd.ramo
	, csd.cod_producto
	, csd.producto
	, CAST('' AS BIGINT) AS nro_poliza_renovada
	, csd.vig_desde as fecha_vig_desde
	, '' as fecha_vig_hasta
	, csd.fecha_alta
	, csd.fecha_baja
	, '' as fecha_emision_poliza
	, csd.fecha_ult_mod as fecha_ult_modificacion
	, csd.forma_pago, '' as mail
	, '' as tipo_telefono_1
	, '' as telefono_1
	, '' as tipo_telefono_2
	, '' as telefono_2
	, csd.entidad 
from de_qua_1raw.cliente_seguros_dir csd 
where (csd.entidad = 'dir' and csd.fecha_proceso = ${fechadir})




